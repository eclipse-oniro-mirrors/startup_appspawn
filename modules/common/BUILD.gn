# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/startup/appspawn/appspawn.gni")
import("//build/ohos.gni")

ohos_shared_library("appspawn_common") {
  sources = [
    "appspawn_adapter.cpp",
    "appspawn_cgroup.c",
    "appspawn_common.c",
    "appspawn_namespace.c",
    "appspawn_silk.c",
  ]
  if (is_debug || build_variant == "root") {
    sources += [ "appspawn_begetctl.c" ]
  }

  include_dirs = [
    ".",
    "${appspawn_path}/common",
    "${appspawn_path}/standard",
  ]
  cflags = []
  deps = [
    "${appspawn_path}/modules/module_engine:libappspawn_module_engine",
    "${appspawn_path}/util:libappspawn_util",
  ]
  defines = [ "GRAPHIC_PERMISSION_CHECK" ]
  external_deps = [
    "access_token:libtokenid_sdk",
    "access_token:libtokensetproc_shared",
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "hilog:libhilog",
    "init:libbegetutil",
    "netmanager_base:netsys_client",
  ]
  if (build_selinux) {
    defines += [ "WITH_SELINUX" ]
    external_deps += [
      "selinux:libselinux",
      "selinux_adapter:libhap_restorecon",
    ]
  }
  if (build_seccomp) {
    defines += [ "WITH_SECCOMP" ]
    if (appspawn_seccomp_privilege) {
      cflags += [ "-DSECCOMP_PRIVILEGE" ]
    }
    external_deps += [ "init:seccomp" ]
  }

  if (!defined(global_parts_info) ||
      defined(global_parts_info.security_security_component_manager)) {
    defines += [ "SECURITY_COMPONENT_ENABLE" ]
    external_deps += [ "security_component_manager:libsecurity_component_sdk" ]
  }

  if (!defined(global_parts_info) ||
      defined(global_parts_info.security_code_signature)) {
    defines += [ "CODE_SIGNATURE_ENABLE" ]
    external_deps += [ "code_signature:libcode_sign_attr_utils" ]
  }

  if (defined(appspawn_sandbox_new) && appspawn_sandbox_new) {
    defines += [ "APPSPAWN_SANDBOX_NEW" ]
  }

  subsystem_name = "${subsystem_name}"
  part_name = "${part_name}"
  install_enable = true
  if (target_cpu == "arm64" || target_cpu == "x86_64" ||
      target_cpu == "riscv64") {
    module_install_dir = "lib64/appspawn/common"
  } else {
    module_install_dir = "lib/appspawn/common"
  }
}
